#BlueJ class context
comment0.target=RedBlackBST
comment0.text=\r\n\ Write\ a\ description\ of\ class\ RedBlackBST\ here.\r\n\r\n\ @author\ (Divyesh\ Joshi)\r\n\ @version\ (Dec.\ 15.\ 2020)\r\n
comment1.params=
comment1.target=java.util.Iterator\ iterator()
comment10.params=h
comment10.target=RedBlackBST.Node\ rotateRight(RedBlackBST.Node)
comment11.params=key
comment11.target=java.lang.Object\ get(java.lang.Comparable)
comment12.params=
comment12.target=int\ maxTreeDepth()
comment13.params=node\ depth
comment13.target=void\ traverse(RedBlackBST.Node,\ int)
comment14.params=
comment14.target=double\ meanTreeDepth()
comment2.params=key
comment2.target=void\ remove(java.lang.Comparable)
comment3.params=key
comment3.target=boolean\ contains(java.lang.Comparable)
comment4.params=key\ val
comment4.target=void\ put(java.lang.Comparable,\ java.lang.Object)
comment5.params=x\ key\ val
comment5.target=RedBlackBST.Node\ insert(RedBlackBST.Node,\ java.lang.Comparable,\ java.lang.Object)
comment6.params=x
comment6.target=boolean\ isRed(RedBlackBST.Node)
comment7.params=h
comment7.target=RedBlackBST.Node\ splitFourNode(RedBlackBST.Node)
comment8.params=h
comment8.target=RedBlackBST.Node\ leanLeft(RedBlackBST.Node)
comment9.params=h
comment9.target=RedBlackBST.Node\ rotateLeft(RedBlackBST.Node)
numComments=15
